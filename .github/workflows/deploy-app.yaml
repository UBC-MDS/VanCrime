# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main]

name: shiny-deploy

jobs:
  shiny-deploy:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-pandoc@v2
      
# DON'T ADD LINES 34-57. This is for my app.
# If the action is not working without this, the system requirements for your packages instead.
      - name: Cache APT Packages
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: |
            make
            gdal-bin
            libssl-dev
            libcurl4-openssl-dev
            libudunits2-dev
            libgdal-dev
            libgeos-dev
            libgeos++-dev
            libicu-dev
            libproj-dev
            libpng-dev
            zlib1g-dev
          run: |
            sudo apt-get update
            sudo apt-get install -y ${{ join(needs.build.outputs.packages, ' ') }}

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-renv@v2
  
      - name: Install rsconnect
        run: install.packages("rsconnect")
        shell: Rscript {0}

      - name: Authorize and deploy app
        env: 
          # Provide your app name, account name, and server to be deployed below
          APPNAME: VanCrime
          ACCOUNT: markusnam
          SERVER: shinyapps.io # server to deploy
        run: |
          rsconnect::setAccountInfo("${{ secrets.RSCONNECT_USER }}", "${{ secrets.RSCONNECT_TOKEN }}", "${{ secrets.RSCONNECT_SECRET }}")
          rsconnect::deployApp(appName = "${{ env.APPNAME }}", account = "${{ env.ACCOUNT }}", server = "${{ env.SERVER }}")
        shell: Rscript {0}
        
